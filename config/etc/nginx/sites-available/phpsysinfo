server {
    listen 80;
    server_name @server@.@domain@;
    # enforce https
    return 301 https://$server_name$request_uri;
}

server {

    listen 443 ssl;
    server_name @server@.@domain@;

    ssl_certificate /etc/openvpn/@server@.crt;
    ssl_certificate_key /etc/openvpn/@server@.key;

    # Add headers to serve security related headers
    # Before enabling Strict-Transport-Security headers please read into this topic first.
    #add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;
    add_header X-Download-Options noopen;
    add_header X-Permitted-Cross-Domain-Policies none;

    # Path to the root of your installation
    root /var/www/;

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ^~ /phpsysinfo {

        # set max upload size
        client_max_body_size 512M;
        fastcgi_buffers 64 4K;

        location /phpsysinfo {
            try_files $uri $uri/;
            rewrite ^ /phpsysinfo/index.php$uri;
        }

        location ~ ^/phpsysinfo/.+\.php(?:$|/) {
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param HTTPS on;
            fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
            fastcgi_param front_controller_active true;
            fastcgi_pass php-handler;
            fastcgi_intercept_errors on;
            fastcgi_request_buffering off; #Available since nginx 1.7.11
        }

    }

}
